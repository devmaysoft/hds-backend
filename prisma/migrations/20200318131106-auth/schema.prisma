datasource mysql {
  provider = "mysql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  MODERATOR ADMIN
}

model Supplier {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  city      String
  state     String
  zip       Int
  phone     String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id              Int      @id @default(autoincrement())
  modelNumber     Int
  productCategory String
  description     String
  unitCost        Int
  price           Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// for relation def
// @see https://github.com/prisma/prisma2/blob/master/docs/relations.md/#the-relation-attribute
model ProductOrder {
  id                Int       @id @default(autoincrement())
  productId         Product[]
  supplierId        Supplier
  quantityPurchased Int
  costEach          Int
  extendedCost      Int
  dueDate           DateTime
  orderDate         DateTime  @default(now())
}

model Location {
  id      Int    @id @default(autoincrement())
  address String
  city    String
  state   String
  zip     Int
  phone   String
}

model Employee {
  id            Int      @id @default(autoincrement())
  locationId    Location
  role          Role     @default(value: MODERATOR)
  firstName     String
  lastName      String
  address       String
  city          String
  state         String
  zip           Int
  phone         String
  email         String   @unique
  password      String
  jwtUserSecret String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Inventory {
  id           Int        @id @default(autoincrement())
  productId    Product[]
  locationId   Location[]
  aisle        Int
  bin          String
  serialNumber Int
}

// todo will customer need authentication?
model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  city      String
  state     String
  zip       Int
  phone     String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Job {
  id             Int       @id @default(autoincrement())
  customerId     Customer
  startDate      DateTime  @default(now())
  scheduledEnd   DateTime
  scheduledHours Int
  actualHours    Int?
  actualEnd      DateTime?
}

// the id is composite of customerId and jobId
model CustomerOrder {
  id                Int       @id @default(autoincrement())
  customerId        Customer
  jobId             Job
  productId         Product[]
  orderDate         DateTime  @default(now())
  requestedDate     DateTime
  quantityPurchased Int
  unitCost          Int
  extendedCost      Int
  dueDate           DateTime
}

model CustomerSale {
  id              Int           @id @default(autoincrement())
  customerId      Customer
  customerOrderId CustomerOrder
  productId       Product[]
  saleDate        DateTime      @default(now())
  saleAmount      Int
}

model Bid {
  id            Int      @id @default(autoincrement())
  customerId    Customer
  requiredHours Int
  bidAmount     Int
}

model BidProduct {
  id         String   @id @default(uuid())
  bidId      Bid
  productId  Product
  saleDate   DateTime @default(now())
  saleAmount Int
}