datasource mysql {
  provider = "mysql"
  url = "***"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

enum Role {
  MODERATOR ADMIN
}

model Supplier {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  city      String
  state     String
  zip       Int
  phone     String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id              Int          @id @default(autoincrement())
  modelNumber     String
  productCategory String
  description     String
  unitCost        Int
  listPrice       Int
  serialNumber    String
  brand           String
  salesOrders     SalesOrder[]
  quantityOnHand  Int
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

// the orders for the company, ie fill on hand stock
model SalesOrder {
  id                Int       @id @default(autoincrement())
  productId         Product
  supplierId        Supplier
  quantityPurchased Int
  costEach          Int
  extendedCost      Int
  dueDate           DateTime
  orderDate         DateTime  @default(now())
}

model MagicCode {
  code      String   @id
  user      Employee
  updatedAt DateTime @updatedAt
}

model Employee {
  id            Int        @id @default(autoincrement())
  locationId    Location   @relation(references: [id])
  role          Role       @default(value: MODERATOR)
  firstName     String
  lastName      String
  address       String
  city          String
  state         String
  zip           Int
  phone         String
  email         String     @unique
  password      String
  jwtUserSecret String
  magicCode     MagicCode?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Inventory {
  id         Int        @id @default(autoincrement())
  productId  Product[]
  locationId Location[]
  name       String
  aisle      Int
  bin        String     @unique
}

model Location {
  id        Int        @id @default(autoincrement())
  address   String
  city      String
  state     String
  zip       Int
  phone     String
  employees Employee[]
}

model Customer {
  id            Int      @id @default(autoincrement())
  firstName     String
  middleInitial String
  lastName      String
  address       String
  city          String
  state         String
  zip           Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Job {
  id             Int       @id @default(autoincrement())
  customerId     Customer
  startDate      DateTime  @default(now())
  scheduledEnd   DateTime
  scheduledHours Int
  actualHours    Int?
  actualEnd      DateTime?
}

// the single order for a customer comes first
// dueDate is long term
model CustomerOrder {
  id                Int       @id @default(autoincrement())
  customerId        Customer
  jobId             Job
  orderDate         DateTime  @default(now())
  deliveryCost      Int
  totalCost         Int
  remainderDue      Int
  totalCostDueDate  DateTime
}

// the bill send to the customer monthly
// sales records, may have multiple customer orders
// dueDate defaults to 15th of coming month
model CustomerSale {
  id              Int             @id @default(autoincrement())
  billNumber      Int
  customerId      Customer
  customerOrderId CustomerOrder[]
  saleDate        DateTime
  saleAmount      Int
  createdAt       DateTime        @default(now())
  dueDate         DateTime
}

model CustomerOrderProduct {
  quantityPurchased Int
  extendedCost      Int
  productId         Product
  customerSale      CustomerSale
  @@id([productId, customerSale])
}

model Bid {
  id            Int      @id @default(autoincrement())
  customerId    Customer
  requiredHours String
  bidAmount     String
}

model BidProduct {
  id         Int      @id @default(autoincrement())
  bidId      Bid
  productId  Product
  saleDate   DateTime @default(now())
  saleAmount String
}
