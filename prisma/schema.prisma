datasource mysql {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

enum Role {
  MODERATOR ADMIN
}

model Supplier {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  city      String
  state     String
  zip       Int
  phone     String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id              Int      @id @default(autoincrement())
  modelNumber     String
  productCategory String
  description     String
  unitCost        String
  listPrice       String
  serialNumber    String
  brand           String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// for relation def, removed though for simplicity's sake
// @see https://github.com/prisma/prisma2/blob/master/docs/relations.md/#the-relation-attribute
model ProductOrder {
  id                Int       @id @default(autoincrement())
  productId         Product[]
  supplierId        Supplier
  quantityPurchased Int
  costEach          String
  extendedCost      String
  dueDate           DateTime
  orderDate         DateTime  @default(now())
}

model Location {
  id      Int    @id @default(autoincrement())
  address String
  city    String
  state   String
  zip     Int
  phone   String
}

model MagicCode {
  code      String   @id
  user      Employee
  updatedAt DateTime @updatedAt
}

model Employee {
  id            Int        @id @default(autoincrement())
  locationId    Location
  role          Role       @default(value: MODERATOR)
  firstName     String
  lastName      String
  address       String
  city          String
  state         String
  zip           Int
  phone         String
  email         String     @unique
  password      String
  jwtUserSecret String
  magicCode     MagicCode?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Inventory {
  id         Int        @id @default(autoincrement())
  productId  Product[]
  locationId Location[]
  aisle      Int
  bin        String
}

model Customer {
  id            Int      @id @default(autoincrement())
  firstName     String
  middleInitial String
  lastName      String
  address       String
  city          String
  state         String
  zip           Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Job {
  id             Int       @id @default(autoincrement())
  customerId     Customer
  startDate      DateTime  @default(now())
  scheduledEnd   DateTime
  scheduledHours String
  actualHours    String?
  actualEnd      DateTime?
}

// the single order for a customer
// dueDate is long term
model CustomerOrder {
  id                Int       @id @default(autoincrement())
  customerId        Customer
  jobId             Job
  productId         Product[]
  orderDate         DateTime  @default(now())
  requestedDate     DateTime
  quantityPurchased Int
  unitCost          String
  extendedCost      String
  dueDate           DateTime
}

// the bill send to the customer monthly
// sales records, may have multiple customer orders
// dueDate defaults to 15th of coming month
model CustomerSale {
  id              Int             @id @default(autoincrement())
  billNumber      Int
  customerId      Customer
  customerOrderId CustomerOrder[]
  productId       Product[]
  saleDate        DateTime        @default(now())
  saleAmount      String
  createdAt       DateTime        @default(now())
  dueDate         DateTime
}

model Bid {
  id            Int      @id @default(autoincrement())
  customerId    Customer
  requiredHours String
  bidAmount     String
}

model BidProduct {
  id         String   @id @default(uuid())
  bidId      Bid
  productId  Product
  saleDate   DateTime @default(now())
  saleAmount String
}
